{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","inputFieldRef","useRef","useState","inputValue","setInputValue","apidata","setApiData","dataMapper","arr","map","strMeal","idMeal","strInstructions","a","fetch","method","apiData","json","dataJSON","meals","console","log","printDish","data","className","src","strMealThumb","alt","strArea","strCategory","strTags","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","strIngredient6","onSubmit","event","preventDefault","current","value","apiHandler","type","placeholder","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPAiGeA,MA5Ff,WACC,IAGMC,EAAgBC,mBACtB,EAAoCC,mBAAS,MAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAAS,MAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAIMC,EAAa,SAACC,GACnBA,EAAIC,KAAI,YAA0C,EAAvCC,QAAuC,EAA9BC,OAA8B,EAAtBC,oBAXf,4CAgBd,8BAAAC,EAAA,+EAEwBC,MAAM,wDAAD,OAE8BX,GACxD,CAAEY,OAAQ,QALb,cAEQC,EAFR,gBAOyBA,EAAQC,OAPjC,OAOQC,EAPR,OASEZ,EAAU,OAACY,QAAD,IAACA,OAAD,EAACA,EAAUC,OAErBZ,EAAU,OAACW,QAAD,IAACA,OAAD,EAACA,EAAUC,OAXvB,kDAaEC,QAAQC,IAAI,gBAbd,2DAhBc,sBAmCd,IAAMC,EAAS,OAAGjB,QAAH,IAAGA,OAAH,EAAGA,EAASI,KAAI,SAACc,GAE/B,OAAO,sBAAKC,UAAU,UAAf,UAEH,qBAAKC,IAAG,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAMG,aAAcC,IAAI,eAGnC,sBAAKH,UAAU,eAAf,UAEE,6DAAyBD,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMK,WAC/B,6DAAyBL,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMM,eAChC,yDAAqBN,QAArB,IAAqBA,OAArB,EAAqBA,EAAMb,WAC3B,uDAAmBa,QAAnB,IAAmBA,OAAnB,EAAmBA,EAAMO,WACzB,2DAAuBP,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMQ,kBAC7B,2DAAuBR,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMS,kBAC7B,6DAAyBT,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMU,kBAC/B,4DAAwBV,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMW,kBAC9B,4DAAwBX,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAMY,kBAC9B,2DAAuBZ,QAAvB,IAAuBA,OAAvB,EAAuBA,EAAMa,kBAC7B,6DAAyBb,QAAzB,IAAyBA,OAAzB,EAAyBA,EAAMQ,qBAI/B,sBAAKP,UAAU,YAAf,UACA,yCACA,qCAAMD,QAAN,IAAMA,OAAN,EAAMA,EAAMX,2BAMlB,OACC,qBAAKY,UAAU,MAAf,SACC,yBAAQA,UAAU,aAAlB,UACE,+CACH,uBACCa,SAAU,SAACC,GACXA,EAAMC,iBACNnC,EAAcJ,EAAcwC,QAAQC,OAzExB,mCA0EZC,IAJD,UAMC,uBACAC,KAAK,OACLC,YAAY,6BACZC,IAAK7C,IACL,+CAEO,wDAGLsB,QC9EUwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6cb84822.chunk.js","sourcesContent":["import \"./App.css\";\nimport Button from '@material-ui/core/Button';\nimport { useRef, useState } from \"react\";\n\n\nfunction App() {\n\tconst appName = \"ReactJS is Fun!\";\n\n\n\tconst inputFieldRef = useRef();\n\tconst [inputValue, setInputValue] = useState(null);\n\tconst [apidata, setApiData] = useState(null);\n\t\n\t\n\n\tconst dataMapper = (arr) => {\n\t\tarr.map(({ strMeal, idMeal, strInstructions }) => {\n\t\t\n\t\t});\n\t};\n\n\tasync function apiHandler() {\n\t\ttry {\n\t\t\tconst apiData = await fetch(\n\t\t\t\n\t\t\t\t`https://www.themealdb.com/api/json/v1/1/search.php?s=${inputValue}`,\n\t\t\t\t{ method: \"GET\" }\n\t\t\t);\n\t\t\tconst dataJSON = await apiData.json();\n\t\t\n\t\t\tsetApiData(dataJSON?.meals);\n\n\t\t\tdataMapper(dataJSON?.meals);\n\t\t} catch (error) {\n\t\t\tconsole.log(\"API failure!\");\n\t\t\t\n      \n\t\t}\n\t}\n\n\tconst printDish = apidata?.map((data) => {\n\t\t\n\t\treturn <div className=\"reciepe\">\n      \n      <img src= {data?.strMealThumb} alt=\"dish-image\" ></img>\n      \n      \n      <div className=\"reciepe-desc\">\n       \n        <div>Area of Meal     - {data?.strArea}</div>\n        <div>Category of Meal - {data?.strCategory}</div>\n       <div>Name of Meal - {data?.strMeal}</div>\n       <div>Tag of Meal- {data?.strTags}</div>\n       <div>Ingredient-One - {data?.strIngredient1}</div>\n       <div>Ingredient-Two - {data?.strIngredient2}</div>\n       <div>Ingredient-Three - {data?.strIngredient3}</div>\n       <div>Ingredient-Four - {data?.strIngredient4}</div>\n       <div>Ingredient-Five - {data?.strIngredient5}</div>\n       <div>Ingredient-Six - {data?.strIngredient6}</div>\n       <div>Ingredient-Seven - {data?.strIngredient1}</div>\n       \n       \n       </div>\n       <div className=\"meal-desc\">\n       <h2>Recipes</h2>\n       <div>{data?.strInstructions}</div>\n       </div>\n     </div>;\n  \n\t});\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t <h1>Recipe Finder</h1>\n\t\t<form \n\t\t\tonSubmit={(event) => {\n\t\t\tevent.preventDefault();\n\t\t\tsetInputValue(inputFieldRef.current.value);\n\t\t\tapiHandler();\n\t\t\t}}>\n\t\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tplaceholder=\"Enter the name of the dish\"\n\t\t\tref={inputFieldRef}/>\n\t\t\t<button>Find Meal</button>\n          \n          <div>Search for dishes.</div>\n\t\t</form>\n\t\t\t\t\n\t\t\t\t{printDish}\n\t\t\t\t\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}